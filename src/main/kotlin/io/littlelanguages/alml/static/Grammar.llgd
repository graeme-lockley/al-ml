uses "./Scanner.llld";

Program: Expressions;

Expressions: Expression {";" Expression};

Expression
  : "let" LowerID {TypedIdentifier} [":" Type] "=" Expression
  | CallExpression
  ;

TypedIdentifier
  : "(" LowerID ":" Type ")"
  | LowerID
  ;

CallExpression
  : IfExpression {IfExpression}
  ;

IfExpression
  : "if" Expression "->" Expression {"|" Expression "->" Expression} ["else" Expression]
  | LambdaExpression
  ;

LambdaExpression
  : "\" TypedIdentifier {TypedIdentifier} [":" Type] "->" Expression
  | RelationalExpression
  ;

RelationalExpression
  : AdditiveExpression [RelationalOp AdditiveExpression]
  ;

RelationalOp: "==" | "!=" | "<" | "<=" | ">" | ">=";

AdditiveExpression
  : MultiplicativeExpression {("+" | "-") MultiplicativeExpression}
  ;

MultiplicativeExpression
  : TypedTerm {("*" | "/") TypedTerm}
  ;

TypedTerm
  : Term [":" Type]
  ;

Term
  : "(" [Expression] ")"
  | LiteralInt
  | LiteralString
  | UpperID
  | LowerID
  | "try" Term Term
  | "signal" Term
  | "{" Expression {";" Expression} "}"
  ;

Type
  : ADTType {"->" ADTType}
  ;

ADTType
  : UpperID {ADTType}
  | TermType
  ;

TermType
  : LowerID
  | "(" [Type] ")"
  ;
